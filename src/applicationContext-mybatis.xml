<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                     http://www.springframework.org/schema/context
                     http://www.springframework.org/schema/context/spring-context-3.0.xsd
                     http://www.springframework.org/schema/aop
                     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                     http://www.springframework.org/schema/mvc
                     http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                     http://www.springframework.org/schema/tx
                     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"> 
	
    <context:component-scan base-package="com.easycms"></context:component-scan>
	<context:property-placeholder location="classpath:db.properties"/>
	<!-- 配置DataSource数据源 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${username}"></property>
		<property name="password" value="${password}"></property>
	</bean>
<!-- 	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/easycmsdb"></property>
		<property name="username" value="root"></property>
		<property name="password" value=""></property>
	</bean> -->

	<!-- 配置SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- mapper配置路径 -->
		<property name="mapperLocations" value="classpath:com/easycms/mapper/*-mapper.xml"></property>
	</bean>

    <!-- 单独配置一个Mapper； 这种模式就是得给每个mapper接口配置一个bean (不推荐使用)-->
    <!-- 
    <bean id="accountMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
        <property name="mapperInterface" value="com.easycms.mapper.AccountMapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/> 
    </bean> 

    <bean id="companyMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
        <property name="mapperInterface" value="com.easycms.mapper.CompanyMapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/> 
    </bean>
     -->
     
    <!-- 建议采用扫描的模式管理sqlmapper，扫描目录在com/easycms/mapper目录下，所有的mapper都继承SqlMapper接口的接口， 只需配置一个bean -->
	<!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.easycms.mapper"></property>
		<property name="markerInterface" value="com.easycms.mapper.SqlMapper"></property>
	</bean>-->
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean> 
	<bean id="idao" class="com.easycms.dao.IdaoImpl">
		<property name="sqlSessionTemplate" ref="sqlSession"></property>
	</bean>
	
</beans>